cmake_minimum_required(VERSION 3.6.1)

SET(CMAKE_INSTALL_PREFIX "${CMAKE_SOURCE_DIR}/out" CACHE PATH "")

SET(BUILD_GAME true CACHE BOOL "Whether or not to build the main game.")
SET(BUILD_MASTER false CACHE BOOL "Whether or not to build the master server.")
SET(BUILD_HEADLESS false CACHE BOOL "Set to true if you want to build a headless server instead of the whole game.")
SET(USE_QT CACHE BOOL "Use Qt5 to build dedicated server.")
SET(PANDORA false CACHE BOOL "Build for the Pandora.")

IF(WIN32)
  SET(CERT "" CACHE FILEPATH "The location of the digital certificate with which to sign your installer.")
  SET(CERT_PASS "" CACHE STRING "The password with which to use your digital certificate.")
ENDIF()

SET(PATH_ZLIB "" CACHE PATH "The path the Zlib, for systems that can't find it.")
IF(NOT BUILD_HEADLESS)
  SET(PATH_GLEW "" CACHE PATH "The path to GLEW, for systems that can't find it.")
  SET(PATH_SFML "" CACHE PATH "The path to SFML, for systems that can't find it.")
  IF(WIN32)
    SET(PATH_UCRT "" CACHE PATH "The path the the Windows Universal CRT.")
  ENDIF()
ENDIF()
IF(USE_QT)
  SET(PATH_QT "" CACHE PATH "The path the Qt, for systems that can't find it.")
ENDIF()

IF(NOT "${PATH_ZLIB}" STREQUAL "")
  SET(ZLIB_ROOT "${PATH_ZLIB}")
ENDIF()
IF(NOT BUILD_HEADLESS)
  IF(NOT "${PATH_GLEW}" STREQUAL "")
    SET(GLEW_ROOT "${PATH_GLEW}")
  ENDIF()
  IF(NOT "${PATH_QT}" STREQUAL "")
    SET(Qt5_DIR "${PATH_QT}/lib/cmake/Qt5")
  ENDIF()
  IF(NOT "${PATH_SFML}" STREQUAL "")
    SET(SFML_ROOT "${PATH_SFML}")
  ENDIF()
ENDIF()

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules" "${PATH_SFML}/cmake/Modules")

PROJECT("TreadMarks")

IF(MSVC)
  ADD_DEFINITIONS(/D_CRT_SECURE_NO_WARNINGS)
  ADD_DEFINITIONS(/wd4244)
  ADD_DEFINITIONS(/wd4018)
ENDIF()

if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
  # require at least gcc 4.8
  if (CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.8)
      message(FATAL_ERROR "GCC version must be at least 4.8!")
  endif()
  if (CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6.0)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
  endif()
elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
  # require at least clang 3.2
  if (CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.2)
      message(FATAL_ERROR "Clang version must be at least 3.2!")
  endif()
endif()


IF(PANDORA)
  ADD_DEFINITIONS(-DPANDORA)
ENDIF()

IF(BUILD_HEADLESS)
  ADD_DEFINITIONS(-DHEADLESS)
ENDIF()

IF(BUILD_GAME)
  ADD_SUBDIRECTORY("src/game")
  IF(WIN32)
    IF(NOT BUILD_HEADLESS)
      ADD_SUBDIRECTORY("src/launcher")
    ENDIF()
  ENDIF()
ENDIF()

IF(BUILD_MASTER)
  ADD_SUBDIRECTORY("src/tmmaster")
ENDIF()

ADD_SUBDIRECTORY("src/installer")
